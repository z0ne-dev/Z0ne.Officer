<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#
    var sTypes = new[] { "decimal", "sbyte", "short", "int", "long", "float", "double" };
    var uTypes = new[] { "byte", "ushort", "uint", "ulong" };
#>
// <auto-generated />

namespace Z0ne.Officer;

public static class NumericGuard
{
<#
    foreach (var t in sTypes)
    {
#>
    public static ValueGuard<<#=t#>> Negative(this ValueGuard<<#=t#>> guard)
    {
        if (guard.Value < 0)
        {
            throw new ArgumentException("Negative Number", guard.ParameterName);
        }

        return guard;
    }

    public static ValueGuard<<#=t#>> Positive(this ValueGuard<<#=t#>> guard)
    {
        if (guard.Value > 0)
        {
            throw new ArgumentException("Positive Number", guard.ParameterName);
        }

        return guard;
    }

<#
    }

    foreach (var t in sTypes.Concat(uTypes))
    {
#>
    public static ValueGuard<<#=t#>> Null(this ValueGuard<<#=t#>> guard)
    {
        if (guard.Value == 0)
        {
            throw new ArgumentException("Number is 0", guard.ParameterName);
        }

        return guard;
    }
<#
    }
#>
}
